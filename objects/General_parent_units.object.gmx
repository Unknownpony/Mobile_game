<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initial units

xp = 0
position = 0
focuse = 0
select = 0
active_turn = 0
targeted = 0
evolve = 0
type_of_attack = 0
unit_id = 0
level_check = 0
unit_level = 0
buff = 0
debuff = 0
def = 0
effect = 0
dmg_amp = 1
debuff_counter = 0
lore = 0
lore_button = 0
switch (object_get_name(object_index))
{
    //Warriors
    //basic
    case "Squire": 
    {
        max_hp = 100
        hp = 100
        ad = 25
        ar = 0
        md = 0
        mr = 0
        in = 50
        xp_to_level_up = 200
    } break;
    //Tier 1
    case "Warrior": 
    {
        max_hp = 120
        hp = 120
        ad = 50
        ar = 0
        md = 0
        mr = 0
        in = 60
        xp_to_level_up = 500
    } break;
    case "Young_hero": 
    {
        max_hp = 160
        hp = 160
        ad = 45
        ar = 0
        md = 0
        mr = 0
        in = 60
        xp_to_level_up = 500
    } break;
    case "Knight": 
    {
        max_hp = 200
        hp = 200
        ad = 40
        ar = 10
        md = 0
        mr = 0
        in = 50
        xp_to_level_up = 500
    } break;
    //Tier 2
    case "Elementalist_warrior":
    {
        max_hp = 150
        hp = 150
        ad = 35
        ar = 0
        md = 35
        mr = 0
        in = 60
        xp_to_level_up = 2200
    } break;
    case "Hero":
    {
        max_hp = 200
        hp = 200
        ad = 80
        ar = 5
        md = 0
        mr = 0
        in = 50
        xp_to_level_up = 2200
    } break;
    case "Paladin":
    {
        max_hp = 260
        hp = 260
        ad = 50
        ar = 20
        md = 0
        mr = 5
        in = 50
        xp_to_level_up = 2200
    } break;   
    //Tier 3
    case "Nymph":
    {
        max_hp = 240
        hp = 260
        ad = 70
        ar = 0
        md = 25
        mr = 0
        in = 60
        xp_to_level_up = 5000
    } break;
    case "Dragon_slayer":
    {
        max_hp = 220
        hp = 220
        ad = 50
        ar = 15
        md = 50
        mr = 0
        in = 55
        xp_to_level_up = 5000
    } break;
    case "Sylph":
    {
        max_hp = 200
        hp = 200
        ad = 25
        ar = 0
        md = 75
        mr = 15
        in = 60
        xp_to_level_up = 5000
    } break;
    case "Holy_avenger":
    {
        max_hp = 230
        hp = 230
        ad = 125
        ar = 0
        md = 0
        mr = 0
        in = 50
        xp_to_level_up = 5000
    } break;
    case "Gladiator":
    {
        max_hp = 275
        hp = 275
        ad = 80
        ar = 45
        md = 0
        mr = 0
        in = 50
        xp_to_level_up = 5000
    } break;
    case "Wall":
    {
        max_hp = 300
        hp = 300
        ad = 70
        ar = 25
        md = 0
        mr = 25
        in = 40
        xp_to_level_up = 5000
    } break;
    //Fighters
    case "Fighter": 
    {
        max_hp = 70
        hp = 70
        ad = 20
        ar = 0
        md = 0
        mr = 0
        in = 55
        xp_to_level_up = 200
    } break;
    //Tier 1
    case "Rouge": 
    {
        max_hp = 80
        hp = 80
        ad = 50
        ar = 0
        md = 0
        mr = 0
        in = 55
        xp_to_level_up = 200
    } break;
    case "Kung_Fu_Fighter": 
    {
        max_hp = 100
        hp = 100
        ad = 35
        ar = 5
        md = 0
        mr = 0
        in = 55
        xp_to_level_up = 200
    } break;
    //Tier 2
    case "Assassin": 
    {
        max_hp = 90
        hp = 90
        ad = 75
        ar = 0
        md = 0
        mr = 0
        in = 55
        xp_to_level_up = 200
    } break;
    case "Shaolin_nun": 
    {
        max_hp = 125
        hp = 125
        ad = 55
        ar = 0
        md = 0
        mr = 0
        in = 60
        xp_to_level_up = 200
    } break;
    case "Shaolin_monk": 
    {
        max_hp = 135
        hp = 135
        ad = 45
        ar = 10
        md = 0
        mr = 0
        in = 55
        xp_to_level_up = 200
    } break;
    //Tier 3
    case "Shadow_ninja": 
    {
        max_hp = 95
        hp = 95
        ad = 115
        ar = 0
        md = 0
        mr = 0
        in = 55
        xp_to_level_up = 200
    } break;
    case "Rebel": 
    {
        max_hp = 140
        hp = 140
        ad = 85
        ar = 15
        md = 0
        mr = 0
        in = 55
        xp_to_level_up = 200
    } break;
    case "Enlightened_one": 
    {
        max_hp = 130
        hp = 130
        ad = 40
        ar = 10
        md = 40
        mr = 10
        in = 60
        xp_to_level_up = 200
    } break;
    case "Ogre": 
    {
        max_hp = 200
        hp = 200
        ad = 90
        ar = 20
        md = 0
        mr = 0
        in = 55
        xp_to_level_up = 200
    } break;
    //Mages
    //basic
    case "Apprentice": 
    {
        max_hp = 40
        hp = 40
        ad = 0
        ar = 0
        md = 15
        mr = 0
        in = 40
        xp_to_level_up = 200
    } break;
    //Tier 1
    case "Mage": 
    {
        max_hp = 75
        hp = 75
        ad = 0
        ar = 0
        md = 30
        mr = 5
        in = 40
        xp_to_level_up = 500
    } break;
    case "Enchantress": 
    {
        max_hp = 60
        hp = 60
        ad = 0
        ar = 0
        md = 35
        mr = 0
        in = 45
        xp_to_level_up = 500
    } break;
    //Tier 2
    case "Wizard": 
    {
        max_hp = 100
        hp = 100
        ad = 0
        ar = 0
        md = 45
        mr = 10
        in = 40
        xp_to_level_up = 2200
    } break;
    case "Necromancer": 
    {
        max_hp = 90
        hp = 90
        ad = 25
        ar = 0
        md = 25
        mr = 0
        in = 40
        xp_to_level_up = 2200
    } break;
    case "Sorceress": 
    {
        max_hp = 85
        hp = 85
        ad = 0
        ar = 0
        md = 55
        mr = 0
        in = 45
        xp_to_level_up = 2200
    } break;
    //Tier 3
    case "Great_white_wizard": 
    {
        max_hp = 125
        hp = 125
        ad = 0
        ar = 0
        md = 70
        mr = 20
        in = 40
        xp_to_level_up = 5000
    } break;
    case "Pandemoniues": 
    {
        max_hp = 110
        hp = 110
        ad = 30
        ar = 5
        md = 30
        mr = 5
        in = 40
        xp_to_level_up = 5000
    } break;
    case "Ancient_one": 
    {
        max_hp = 100
        hp = 100
        ad = 0
        ar = 0
        md = 85
        mr = 0
        in = 45
        xp_to_level_up = 5000
    } break;
    //Healers
    case "Acolyte": 
    {
        max_hp = 50
        hp = 50
        ad = 0
        ar = 0
        md = 20
        mr = 0
        in = 20
        xp_to_level_up = 200
    } break;
    //Tier 1
    case "Oracle": 
    {
        max_hp = 75
        hp = 75
        ad = 0
        ar = 0
        md = 40
        mr = 0
        in = 20
        xp_to_level_up = 500
    } break;
    case "Cleric": 
    {
        max_hp = 65
        hp = 65
        ad = 0
        ar = 0
        md = 20
        mr = 0
        in = 20
        xp_to_level_up = 500
    } break;
    //Tier 2
    case "Druid": 
    {
        max_hp = 90
        hp = 90
        ad = 0
        ar = 0
        md = 70
        mr = 0
        in = 20
        xp_to_level_up = 2200
    } break;
    case "Priest": 
    {
        max_hp = 75
        hp = 75
        ad = 0
        ar = 0
        md = 40
        mr = 10
        in = 20
        xp_to_level_up = 2200
    } break;
    //Tier 3
    case "Archdruid": 
    {
        max_hp = 115
        hp = 115
        ad = 0
        ar = 5
        md = 100
        mr = 5
        in = 20
        xp_to_level_up = 5000
    } break;
    case "Bless_one": 
    {
        max_hp = 100
        hp = 100
        ad = 0
        ar = 0
        md = 60
        mr = 105
        in = 20
        xp_to_level_up = 5000
    } break;
    //Rangers
    case "Scout": 
    {
        max_hp = 45
        hp = 45
        ad = 25
        ar = 0
        md = 0
        mr = 0
        in = 60
        xp_to_level_up = 200
    } break;
    //Tier 1
    case "Guner": 
    {
        max_hp = 60
        hp = 60
        ad = 40
        ar = 0
        md = 0
        mr = 0
        in = 60
        xp_to_level_up = 500
    } break;
    case "Archer": 
    {
        max_hp = 80
        hp = 80
        ad = 35
        ar = 0
        md = 0
        mr = 0
        in = 65
        xp_to_level_up = 500
    } break;
    case "Thief": 
    {
        max_hp = 100
        hp = 100
        ad = 40
        ar = 0
        md = 0
        mr = 0
        in = 60
        xp_to_level_up = 500
    } break;
    //Tier 2
    case "Marksman": 
    {
        max_hp = 80
        hp = 80
        ad = 65
        ar = 0
        md = 0
        mr = 0
        in = 60
        xp_to_level_up = 2200
    } break;
    case "Hunter": 
    {
        max_hp = 100
        hp = 100
        ad = 55
        ar = 0
        md = 0
        mr = 0
        in = 65
        xp_to_level_up = 2200
    } break;
    case "Bandit": 
    {
        max_hp = 110
        hp = 110
        ad = 50
        ar = 0
        md = 0
        mr = 0
        in = 60
        xp_to_level_up = 2200
    } break;
    //Tier 3
    case "Duelist": 
    {
        max_hp = 140
        hp = 140
        ad = 50 // x2
        ar = 0
        md = 0
        mr = 0
        in = 60
        xp_to_level_up = 5000
    } break;
    case "Sharpshooter": 
    {
        max_hp = 120
        hp = 120
        ad = 120
        ar = 0
        md = 0
        mr = 0
        in = 45
        xp_to_level_up = 5000
    } break;
    case "Sniper": 
    {
        max_hp = 150
        hp = 150
        ad = 30
        ar = 0
        md = 30
        mr = 0
        in = 65
        xp_to_level_up = 5000
    } break;
    case "Destroyer": 
    {
        max_hp = 200
        hp = 200
        ad = 70
        ar = 0
        md = 0
        mr = 0
        in = 5045
        xp_to_level_up = 5000
    } break;
    case "Outlaw": 
    {
        max_hp = 160
        hp = 160
        ad = 90
        ar = 0
        md = 0
        mr = 0
        in = 60
        xp_to_level_up = 5000
    } break;
}




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Army managment room script
if(room_get_name(room) == "RM_Army_Management")
{
    if(select==1 and view_visible[0]==1)
    {
        x=mouse_x-sprite_width/2
        y=mouse_y-sprite_height/2
    }
}
        


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Battle room  script

if(room_get_name(room) == "RM_Battle_Room")
{
    if(sprite_index&lt;&gt;asset_get_index("SPR_" + object_get_name(object_index) + "_dead"))
        if(Battle_progress.animation == 0)
            sprite_index = asset_get_index("SPR_" + object_get_name(object_index) + "_stand")
    
    if(unit_level&lt;&gt;0 and level_check == 0)
    {    
        max_hp += (10*unit_level)
        ad += (5*unit_level)
        ar += (2*unit_level)
        md += (5*unit_level)
        mr += (2*unit_level)
        xp_to_level_up += (1500*unit_level)
        level_check = 1
    }
    
    if(evolve == 1)
        switch (unit_id)
        {
            //Warriors
            case 1: instance_change(Warrior, true); break;
            case 2: instance_change(Young_hero, true); break;
            case 3: instance_change(Knight, true); break;
            case 4: instance_change(Elementalist_warrior, true); break;
            case 5: instance_change(Hero, true); break;
            case 6: instance_change(Paladin, true); break;
            case 7: instance_change(Nymph, true); break;
            case 8: instance_change(Dragon_slayer, true); break;
            case 9: instance_change(Sylph, true); break;
            case 10: instance_change(Holy_avenger, true); break;
            case 11: instance_change(Gladiator, true); break;
            case 12: instance_change(Wall, true); break;
            //Fighters
            case 13: instance_change(Rouge, true); break;
            case 14: instance_change(Kung_Fu_Fighter, true); break;
            case 15: instance_change(Assassin, true); break;
            case 16: instance_change(Shaolin_nun, true); break;
            case 17: instance_change(Shaolin_monk, true); break;
            case 18: instance_change(Shadow_ninja, true); break;
            case 19: instance_change(Rebel, true); break;
            case 20: instance_change(Enlightened_one, true); break;
            case 21: instance_change(Ogre, true); break;
            //Mages
            case 22: instance_change(Mage, true); break;
            case 23: instance_change(Enchantress, true); break;
            case 24: instance_change(Wizard, true); break;
            case 25: instance_change(Necromancer, true); break;
            case 26: instance_change(Sorceress, true); break;
            case 27: instance_change(Great_white_wizard, true); break;
            case 28: instance_change(Pandemoniues, true); break;
            case 29: instance_change(Ancient_one, true); break;
            //Healers
            case 30: instance_change(Oracle, true); break;
            case 31: instance_change(Cleric, true); break;
            case 32: instance_change(Druid, true); break;
            case 33: instance_change(Priest, true); break;
            case 34: instance_change(Archdruid, true); break;
            case 35: instance_change(Bless_one, true); break;
            //Rangers
            case 36: instance_change(Guner, true); break;
            case 37: instance_change(Archer, true); break;
            case 38: instance_change(Thief, true); break;
            case 39: instance_change(Marksman, true); break;
            case 40: instance_change(Hunter, true); break;
            case 41: instance_change(Bandit, true); break;
            case 42: instance_change(Duelist, true); break;
            case 43: instance_change(Sharpshooter, true); break;
            case 44: instance_change(Sniper, true); break;
            case 45: instance_change(Destroyer, true); break;
            case 46: instance_change(Outlaw, true); break;
            default: evolve = 0 break;
        }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>601</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_execute_script</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>9</kind>
            <script>SCR_Shop_release</script>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Battle room scripts
if(room_get_name(room) == "RM_Battle_Room")
{
    if(focuse == 1)
        Battle_progress.every_enemy=0
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Army managment room scripts

//Select object in shop window 2
if(room_get_name(room) == "RM_Army_Management")
{ 
    if(view_visible[1]==1)
    {
        for(i=0; i&lt;array_length_1d(Army_managment.inst_shop_id); i+=1)
        {
            Army_managment.inst_shop_id[i].select = 0;
            Army_managment.inst_shop_id[i].lore = 0;
        }
        with(Test_lore_showing)
        {
            instance_destroy();
        }
        select = 1
    }
    
    if(focuse == 0)
    {
        focuse = 1
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Battle room scripts

if(room_get_name(room) == "RM_Battle_Room")
{ 
    //select Unit
    for(i=0; i&lt;array_length_1d(Battle_progress.start_army); i+=1)
        Battle_progress.start_army[i].select = 0;
    select = 1
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Army managment room scripts

if(room_get_name(room) == "RM_Army_Management")
{
    if(global.selected==0 and view_visible[0]==1)
    {
        temp_x = x
        temp_y = y
        select = 1
        global.selected = 1   
    } 
    
    if(view_visible[1]==1 and select == 1)
    {
        switch(object_get_name(object_index))
        {
            case "Squire":
                Army_managment.ref_of_clicked_instance.bought_unit = SCR_Buy_unit(object_get_name(object_index),50)
                select = 0
                break;
            case "Fighter":
                Army_managment.ref_of_clicked_instance.bought_unit = SCR_Buy_unit(object_get_name(object_index),60)
                select = 0
                break;
            case "Apprentice":
                Army_managment.ref_of_clicked_instance.bought_unit = SCR_Buy_unit(object_get_name(object_index),75)
                select = 0
                break;
            case "Acolyte":
                Army_managment.ref_of_clicked_instance.bought_unit = SCR_Buy_unit(object_get_name(object_index),65)
                select = 0
                break;
            case "Scout":
                Army_managment.ref_of_clicked_instance.bought_unit = SCR_Buy_unit(object_get_name(object_index),55)
                select = 0
                break;
            }      
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Battle room scripts

if(room_get_name(room) == "RM_Battle_Room")
{ 
    //AI attack
    if(Battle_progress.animation == 0 and Battle_progress.active_unit.active_turn==1 and Battle_progress.active_unit.position&lt;9 and targeted == 1 and select == 1)
    {
        select = 0
        Battle_progress.everyone = 0
        Battle_progress.target_unit = id
        Battle_progress.animation = 1 
        Battle_progress.queue_turn++
        Battle_progress.active_unit.active_turn=0
    } 
}



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Army managment room scripts

if (select==1 and room_get_name(room) == "RM_Army_Management")
{
    draw_rectangle_colour(x-5, y-5, x+101, y+101, c_black, c_black, c_black, c_black, true)
    if(view_visible[1]==1 and lore==0)
        lore = instance_create(view_xview[view_current]+200,view_yview[view_current]+80,Test_lore_showing)    
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Battle room scripts.

if(room_get_name(room) == "RM_Battle_Room")
{
    if(active_turn == 1 and Battle_progress.animation == 0)
        draw_rectangle_colour(x-5, y-5, x+149, y+149, c_black, c_black, c_black, c_black, true)
    
    if(select == 1 and Battle_progress.animation == 0)
        draw_rectangle_colour(x-5, y-5, x+149, y+149, c_blue, c_blue, c_blue, c_blue, true)
       
    if(Battle_progress.attack_range==3 and Battle_progress.every_enemy==1 and hp&gt;0 and select_heal == 1)
        draw_rectangle_colour(x-5, y-5, x+149, y+149, c_purple, c_purple, c_purple, c_purple, true)
     
    if(select == 1)   //if mouse is on object and it's room battle
    {
        if(Battle_progress.animation == 0)    //if aniamtion isn't in progress
        {
            //Draw stats and portret of the obejct on left site of the room
            draw_sprite(asset_get_index("SPR_" + object_get_name(object_index) + "_half_body"),0,0,25)   
            draw_set_font(FNT_Arial_15)
            draw_text(45,201,object_get_name(object_index))   
            draw_text(10,221,"HP: " + string(hp) + " / " + string(max_hp))      
            draw_text(10,241,"XP: " + string(xp) + " / " + string(xp_to_level_up))  
            draw_text(10,261,"AD: " + string(ad)) 
            draw_text(90,261,"AR: " + string(ar)) 
            draw_text(10,281,"MD: " + string(md)) 
            draw_text(90,281,"MR: " + string(mr)) 
            draw_text(45,301,"IN: " + string(in)) 
            lore_button = collision_point( 10, 340, Test_combat_buttons, false, true )
            lore_button.visible = 1 
            //if it's targeted draw green circle around object to indicate it was targeted
            if(targeted == 1)
            {
                    draw_rectangle_colour(x-5, y-5, x+149, y+149, c_green, c_green, c_green, c_green, true) 
                    if(Battle_progress.attack_range==3)
                        Battle_progress.every_enemy=1
            }
        }
    }
    
   
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
